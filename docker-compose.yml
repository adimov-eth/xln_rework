version: '3.8'

services:
  xln-node:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: xln-node
    restart: unless-stopped
    ports:
      - "8080:8080"   # REST API
      - "8081:8081"   # WebSocket API
    environment:
      - NODE_ENV=production
      - XLN_SERVER_ID=xln-docker-001
      - XLN_HOST=0.0.0.0
      - XLN_PORT=8080
      - XLN_STORAGE_PATH=/app/data
      - XLN_BLOCK_TIME=100
      - XLN_LOG_LEVEL=info
    volumes:
      - xln_data:/app/data
      - xln_logs:/app/logs
    networks:
      - xln_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: xln-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - xln_network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    profiles:
      - monitoring

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: xln-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - xln_network
    depends_on:
      - prometheus
    profiles:
      - monitoring

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: xln-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - xln_network
    command: redis-server --appendonly yes
    profiles:
      - cache

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: xln-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - xln_network
    depends_on:
      - xln-node
    profiles:
      - proxy

volumes:
  xln_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  xln_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  redis_data:
    driver: local

networks:
  xln_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16